<?php
// Developed by Dennis Stevense for Digital Deployment

define('USER_ZERO_ANONYMOUS_UID', 0);

/**
 * Implementation of hook_cron().
 */
function user_zero_cron() {
  // When the anonymous user ends up being deleted without us knowing, recreate it
  module_load_include('inc', 'user_zero');
  user_zero_fix_anonymous_user();
}

/**
 * Implementation of hook_menu().
 */
function user_zero_menu() {
  $items = array();
  
  // Deny access to the anonymous user delete confirmation form
  $items['user/' . USER_ZERO_ANONYMOUS_UID . '/delete'] = array(
    'access' => FALSE,
  );
  
  return $items;
}

/**
 * Implementation of hook_user().
 */
function user_zero_user($op, &$edit, &$user) {
  // When the anonymous user ends up being deleted, recreate it
  if ($op == 'delete' && $user->uid == USER_ZERO_ANONYMOUS_UID) {
    watchdog('user_zero', 'Anonymous user has been deleted', array(), WATCHDOG_WARNING);
    
    module_load_include('inc', 'user_zero');
    user_zero_fix_anonymous_user();
  }
}

/**
 * Implementation of hook_form_alter().
 */
function user_zero_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_confirm_delete') {
    $form['#validate'][] = 'user_zero_user_confirm_delete_validate';
  }
}

function user_zero_user_confirm_delete_validate($form, &$form_state) {
  $user = $form_state['values']['_account'];
  
  // When the user does manage to submit the anonymous user delete confirmation form, let validation fail
  if ($user->uid == USER_ZERO_ANONYMOUS_UID) {
    form_set_error('_account', t('The anonymous user may not be deleted.'));
  }
}
